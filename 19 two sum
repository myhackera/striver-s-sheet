SOLUTION 1.)
===================>

n = len(nums)
        
for i in range(n):
    for j in range(i+1,n):
                
         if(nums[i]+nums[j] == target):
              return i,j

TC : O(N*N)
TC : O(1)
        

SOLUTION 2.)
====================>

class Solution:
    def twoSum(self, nums: List[int], target: int) -> List[int]:
        
        n = len(nums)
        temp = []
        for i in range(n):
            temp.append([nums[i], i])
        temp.sort()
        
        i = 0
        j = n-1
        while i < j:
            if temp[i][0] + temp[j][0] == target:
                return [temp[i][1], temp[j][1]]
            elif temp[i][0] + temp[j][0] > target:
                j -= 1 
            else:
                i += 1 
                
                
TC : O(NLOGN)
SC : O(N)
        
        
SOLUTION 3.)
====================>

class Solution:
    def twoSum(self, nums: List[int], target: int) -> List[int]:
        
        n = len(nums)
        for i in range(n):
            nums[i] = [nums[i], i]
        nums.sort()
        
        i = 0
        j = n-1
        while i < j:
            if nums[i][0] + nums[j][0] == target:
                return [nums[i][1], nums[j][1]]
            elif nums[i][0] + nums[j][0] > target:
                j -= 1 
            else:
                i += 1 
                
 TC : O(NLOGN)
 SC : O(1)

