class Solution:
    def findMedianSortedArrays(self, nums1: List[int], nums2: List[int]) -> float:
        
        n1 = len(nums1)
        n2 = len(nums2)
        
        if n1 > n2:
            return self.findMedianSortedArrays(nums2, nums1)
        
        low = 0
        high = n1
        
        while low <= high:
            
            mid = low + (high-low)//2
            cut1 = mid
            cut2 = (n1+n2)//2-mid
            
            l1 = nums1[cut1-1] if cut1 > 0 else float('-inf')
            l2 = nums2[cut2-1] if cut2 > 0 else float('-inf')
            r1 = nums1[cut1] if cut1 < n1 else float('inf')
            r2 = nums2[cut2] if cut2 < n2 else float('inf')
            
            if l1 > r2:
                high = cut1 - 1
            elif l2 > r1:
                low = cut1 + 1
            else:
                return (max(l1, l2)+min(r1, r2))/2 if (n1+n2)%2 == 0 else min(r1, r2)
            
