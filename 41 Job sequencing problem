class Solution:

    def JobScheduling(self,Jobs,n):
        
        stack = []
        for job in Jobs:
            stack.append([job.deadline, job.profit])
        stack.sort(key = lambda x: x[1])
        
        mxprofit = 0
        count = 0
        N = 0
        for s in stack:
            N = max(N, s[0])
        temp = [0]*N
        
        while stack:
            index, profit = stack.pop()
            for i in range(index-1, -1, -1):
                if temp[i] == 0:
                    temp[i] = 1
                    count += 1
                    mxprofit += profit
                    break
        return count, mxprofit
        


=================================>

def jsp(jobs, n):
    
    jobs.sort(key=lambda x: x[2], reverse=True)
    print(jobs)
    vis = [0]*n 
    jobCount = 0
    maxProfit = 0
    
    for i in range(n):
        for j in range(jobs[i][1]-1, -1, -1):
            
            if vis[j]:
                continue
            else:
                print(jobs[i])
                jobCount += 1 
                maxProfit += jobs[i][2]
                vis[j] = 1 
                break
    
    return {jobCount, maxProfit}





n = 4
jobs = [[1, 1, 40], [2, 1, 10], [3, 1, 30], [4, 4, 20]]
print(jsp(jobs, n))
