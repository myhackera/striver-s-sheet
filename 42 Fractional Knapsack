bool cmp(Item a, Item b)
{
    return a.value/(a.weight*1.0)>b.value/(b.weight*1.0);
}

class Solution

    public:
    //Function to get the maximum total value in the knapsack.
    double fractionalKnapsack(int W, Item arr[], int n)
    {
        // Your code here
        pair<double,double> vect[n];
        for(int i=0;i<n;i++){
            vect[i].first= arr[i].value;
            vect[i].second=arr[i].weight;
        }
        
        sort(vect,vect+n,cmp);
        double profit=0;
        
        for(int i=0;i<n;i++){
            if(vect[i].second<=W && W>0){
              profit+=vect[i].first; 
              W-=vect[i].second;
            }
            
            else
            {
                double res= (double)vect[i].first/(double)vect[i].second;
                profit+=res*W;
                break;
            }
        }
        return profit;
    }
        
};
