SOLUTION 1.)
=========================================>

class Solution:
    def compareVersion(self, version1: str, version2: str) -> int:
        
        s1 = [c.lstrip('0') for c in version1.split('.')]
        s2 = [c.lstrip('0') for c in version2.split('.')]
        
        l1 = len(s1)
        l2 = len(s2)
        
        for i in range(l1):
            if s1[i] == '':
                s1[i] = '0'
        for i in range(l2):
            if s2[i] == '':
                s2[i]  = '0'
        
        mn = min(l1, l2)
        
        for i in range(mn):
            if int(s1[i]) > int(s2[i]):
                return 1
            elif int(s1[i]) < int(s2[i]):
                return -1 
            else:
                continue
                
        if mn == l1:
            for i in range(l1, l2):
                if int(s2[i]) > 0:
                    return -1 
        else:
            for i in range(l2, l1):
                if int(s1[i]) > 0:
                    return 1 
           
        return 0
        
SOLUTION 2.) 
==================================>

from itertools import zip_longest
class Solution:
    def compareVersion(self, version1: str, version2: str) -> int:
        
        lis1 = list(map(int, version1.split('.')))
        lis2 = list(map(int, version2.split('.')))
        
        for val1, val2 in zip_longest(lis1, lis2, fillvalue=0):
            
            if val1 == val2:
                continue
            
            else:
                return -1 if val2 > val1 else 1
            
        return 0
        
