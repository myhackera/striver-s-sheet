
O(N logN)
----------------------

class Solution:
    def merge(self, nums1: List[int], m: int, nums2: List[int], n: int) -> None:

        for i in range(n):
            nums1[m+i] = nums2[i]
        nums1.sort()
        return nums1
        
        
O(N)
---------

class Solution:
    def merge(self, nums1: List[int], m: int, nums2: List[int], n: int) -> None:
        
        index = -1
        
        while m > 0 and n > 0:
            
            if nums1[m-1] >= nums2[n-1]:
                nums1[index] = nums1[m-1]
                m -= 1
            else:
                nums1[index] = nums2[n-1]
                n -= 1
                
            index -= 1 
        
        while n > 0:
            
            nums1[index] = nums2[n-1]
            index -= 1
            n -= 1
            
        return nums1
               
------------------------------------------------------------------------
class Solution:
    def findDuplicate(self, nums: List[int]) -> int:

        n = len(nums)

        for i in range(n):
            index = nums[i]%n
            nums[index] += n

        for i in range(n):
            if nums[i]/n >= 2:
                return i

