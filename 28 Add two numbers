# Definition for singly-linked list.
# class ListNode:
#     def __init__(self, val=0, next=None):
#         self.val = val
#         self.next = next
class Solution:
    def addTwoNumbers(self, l1: Optional[ListNode], l2: Optional[ListNode]) -> Optional[ListNode]:
       
        dummy = ListNode(0)
        tail = dummy
        add = 0
        carry = 0
        
        while l1 and l2:
            add = l1.val + l2.val
            if carry:
                add += carry
            carry = add//10
            data = add%10
            tail.next = ListNode(data)
            tail = tail.next
            l1 = l1.next
            l2 = l2.next
            
        while l1:
            add = l1.val
            if carry:
                add += carry
            carry = add//10
            data = add%10
            tail.next = ListNode(data)
            tail = tail.next
            l1 = l1.next
            
        while l2:
            add = l2.val
            if carry:
                add += carry
            carry = add//10
            data = add%10
            tail.next = ListNode(data)
            tail = tail.next
            l2 = l2.next
            
        if carry:
            tail.next = ListNode(carry)
            tail = tail.next
            
        return dummy.next
